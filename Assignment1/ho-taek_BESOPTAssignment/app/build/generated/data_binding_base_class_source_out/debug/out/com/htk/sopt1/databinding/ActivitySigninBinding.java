// Generated by view binder compiler. Do not edit!
package com.htk.sopt1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.htk.sopt1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btLogin;

  @NonNull
  public final Button btSignup;

  @NonNull
  public final EditText etId;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvNoId;

  @NonNull
  public final TextView tvPassword;

  private ActivitySigninBinding(@NonNull ConstraintLayout rootView, @NonNull Button btLogin,
      @NonNull Button btSignup, @NonNull EditText etId, @NonNull EditText etPassword,
      @NonNull TextView tvId, @NonNull TextView tvNoId, @NonNull TextView tvPassword) {
    this.rootView = rootView;
    this.btLogin = btLogin;
    this.btSignup = btSignup;
    this.etId = etId;
    this.etPassword = etPassword;
    this.tvId = tvId;
    this.tvNoId = tvNoId;
    this.tvPassword = tvPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_login;
      Button btLogin = rootView.findViewById(id);
      if (btLogin == null) {
        break missingId;
      }

      id = R.id.bt_signup;
      Button btSignup = rootView.findViewById(id);
      if (btSignup == null) {
        break missingId;
      }

      id = R.id.et_id;
      EditText etId = rootView.findViewById(id);
      if (etId == null) {
        break missingId;
      }

      id = R.id.et_password;
      EditText etPassword = rootView.findViewById(id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.tv_id;
      TextView tvId = rootView.findViewById(id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tv_no_id;
      TextView tvNoId = rootView.findViewById(id);
      if (tvNoId == null) {
        break missingId;
      }

      id = R.id.tv_password;
      TextView tvPassword = rootView.findViewById(id);
      if (tvPassword == null) {
        break missingId;
      }

      return new ActivitySigninBinding((ConstraintLayout) rootView, btLogin, btSignup, etId,
          etPassword, tvId, tvNoId, tvPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
